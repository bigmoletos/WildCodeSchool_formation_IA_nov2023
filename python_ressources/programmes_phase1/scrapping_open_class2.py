""" scrapping du résumé de la page openclassroom module python"""
from bs4 import BeautifulSoup


url='https://openclassrooms.com/fr/courses/7168871-apprenez-les-bases-du-langage-python/7296681-importez-des-packages-python'
# Le HTML de la page en tant que chaîne
# html = """
# <html class="js  supports no-touchevents cssfilters" lang="fr" prefix="og: http://ogp.me/ns#" style=""><head><style id="ace_highlight">.ace_static_highlight {
#     font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', 'Droid Sans Mono', monospace;
#     font-size: 12px;
#     white-space: pre-wrap
# }
# ...
# """

html="<div class=\"oc-richContent root-1-2-1\" data-shouldzoomintoimage=\"true\" data-videotitle=\"La vidéo de Importez des packages Python\" data-expandable-content-label=\"Console de code\" data-codio-button-label=\"Start Coding\"><p id=\"r-7296687\" data-claire-element-id=\"31744672\"><img id=\"r-7296746\" data-claire-element-id=\"31744671\" src=\"https://user.oc-static.com/upload/2021/06/24/16245199652531_3C1-bannie%CC%80re.png\" alt=\"\"></p><p id=\"r-8224151\" data-claire-element-id=\"33764381\">En programmation, nous ne réinventons pas toujours la roue. Parfois, nous pouvons utiliser du code déjà écrit par d'autres personnes pour nous aider à résoudre nos problèmes. Les <strong>modules</strong> et les <strong>packages</strong> sont des outils que nous pouvons utiliser pour cela.</p><div id=\"r-8224246\" data-claire-element-id=\"33764491\" data-claire-semantic=\"question\"><p id=\"r-8224152\" data-claire-element-id=\"33764382\">Pourquoi utiliser des modules et des packages&nbsp;?</p></div><p id=\"r-8224153\" data-claire-element-id=\"33764383\">L'utilisation de modules et de packages peut nous faire gagner beaucoup de <strong>temps</strong> et <strong>d'efforts</strong> dans notre programmation. En utilisant des modules existants, nous n'avons pas besoin d'écrire de code à partir de zéro pour chaque fonction ou classe que nous utilisons. Cela nous permet de nous concentrer sur la résolution de problèmes spécifiques à notre application, plutôt que sur la création de fonctions de base.</p><h3 id=\"r-8224247\" data-claire-element-id=\"33807341\"><strong>Importez un module</strong></h3><p id=\"r-8224154\" data-claire-element-id=\"33764384\">Un module en Python est simplement <strong>un fichier</strong> contenant du code Python. Ce code peut contenir des fonctions, des classes, des variables, etc. Les modules permettent <strong>d'organiser</strong> votre code de manière logique, et de le réutiliser facilement.</p><p id=\"r-8224155\" data-claire-element-id=\"33764501\">Pour utiliser un module, vous pouvez l'importer dans votre code à l'aide du mot-clé&nbsp;<code data-claire-semantic=\"text\">import</code>&nbsp; . Par exemple, si vous avez un fichier nommé&nbsp;<code data-claire-semantic=\"text\">mon_module.py</code>&nbsp; qui contient une fonction nommée&nbsp;<code data-claire-semantic=\"text\">ma_fonction</code>&nbsp; , vous pouvez l'importer ainsi&nbsp;:</p><pre id=\"r-8224256\" data-claire-element-id=\"33764502\"><code data-claire-semantic=\"python\"><div class=\"ace-dracula\"><div class=\"ace_static_highlight ace_show_gutter\" style=\"counter-reset:ace_line 0\"><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_keyword\">import</span> <span class=\"ace_identifier\">mon_module</span></div><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_identifier\">resultat</span> <span class=\"ace_keyword ace_operator\">=</span> <span class=\"ace_identifier\">mon_module</span><span class=\"ace_punctuation\">.</span><span class=\"ace_function ace_support\">ma_fonction</span><span class=\"ace_paren ace_lparen\">(</span><span class=\"ace_paren ace_rparen\">)</span></div></div></div></code></pre><p id=\"r-8224159\" data-claire-element-id=\"33764504\">Une fois le module importé dans votre nouveau fichier grâce à la commande&nbsp;<code data-claire-semantic=\"text\">import</code>&nbsp; , vous pouvez désormais utiliser la fonction&nbsp;<code data-claire-semantic=\"text\">ma_fonction()</code>&nbsp; . Cependant, n'oubliez pas de spécifier le nom du module avant d'appeler la fonction.</p><p id=\"r-8224160\" data-claire-element-id=\"33764505\">Vous pouvez également importer des éléments <strong>spécifiques</strong> d'un module, en utilisant la syntaxe&nbsp;&nbsp;<code data-claire-semantic=\"text\">from mon_module import ma_fonction</code>&nbsp;&nbsp; . Cela vous permet d'utiliser directement la fonction&nbsp;<code data-claire-semantic=\"text\">ma_fonction</code>&nbsp; sans avoir à spécifier le nom du module.</p><pre id=\"r-8224258\" data-claire-element-id=\"33764506\"><code data-claire-semantic=\"python\"><div class=\"ace-dracula\"><div class=\"ace_static_highlight ace_show_gutter\" style=\"counter-reset:ace_line 0\"><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_keyword\">from</span> <span class=\"ace_identifier\">mon_module</span> <span class=\"ace_keyword\">import</span> <span class=\"ace_identifier\">ma_fonction</span></div><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_identifier\">resultat</span> <span class=\"ace_keyword ace_operator\">=</span> <span class=\"ace_identifier\">ma_fonction</span><span class=\"ace_paren ace_lparen\">(</span><span class=\"ace_paren ace_rparen\">)</span></div></div></div></code></pre><aside id=\"r-8224261\" data-claire-element-id=\"33764521\" data-claire-semantic=\"information\"><p id=\"r-8224259\" data-claire-element-id=\"33764507\">Il est généralement recommandé de placer toutes les déclarations d'importation en <strong>début</strong> de fichier Python, avant toute autre instruction.</p></aside><h3 id=\"r-8224248\" data-claire-element-id=\"33833402\"></h3><div class=\"oc-video\"><iframe class=\"oc-video__iframe\" src=\"https://player.vimeo.com/video/836108494?color=7451eb\" allowfullscreen=\"\"></iframe></div><h3 id=\"r-8253003\" data-claire-element-id=\"33833404\"><strong>Créez et importez un package</strong></h3><p id=\"r-8224167\" data-claire-element-id=\"33764397\">Un package en Python est simplement un <strong>dossier</strong> contenant un <strong>ensemble de modules</strong> Python. Les packages permettent <strong>d'organiser</strong> votre code en sous-dossiers, et de créer des hiérarchies de modules.</p><p id=\"r-8224168\" data-claire-element-id=\"33764531\">Pour créer un package, vous devez simplement créer un dossier contenant un fichier nommé&nbsp;<code data-claire-semantic=\"text\">__init__.py</code>&nbsp; . Ce fichier est utilisé pour initialiser le package, et peut contenir du code d'initialisation si nécessaire.</p><p id=\"r-8224169\" data-claire-element-id=\"33764532\">Pour utiliser un module d'un package, vous devez spécifier le <strong>nom</strong> du package dans l'import. Par exemple, si vous avez un package nommé&nbsp;<code data-claire-semantic=\"text\">mon_package</code>&nbsp; qui contient un module nommé&nbsp;<code data-claire-semantic=\"text\">mon_module</code>&nbsp; , vous pouvez l'importer ainsi&nbsp;:</p><pre id=\"r-8224266\" data-claire-element-id=\"33764533\"><code data-claire-semantic=\"python\"><div class=\"ace-dracula\"><div class=\"ace_static_highlight ace_show_gutter\" style=\"counter-reset:ace_line 0\"><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_keyword\">import</span> <span class=\"ace_identifier\">mon_package</span><span class=\"ace_punctuation\">.</span><span class=\"ace_function ace_support\">mon_module</span></div><div class=\"ace_line\"><span class=\"ace_gutter ace_gutter-cell\"></span><span class=\"ace_identifier\">resultat</span> <span class=\"ace_keyword ace_operator\">=</span> <span class=\"ace_identifier\">mon_package</span><span class=\"ace_punctuation\">.</span><span class=\"ace_function ace_support\">mon_module</span><span class=\"ace_punctuation\">.</span><span class=\"ace_function ace_support\">ma_fonction</span><span class=\"ace_paren ace_lparen\">(</span><span class=\"ace_paren ace_rparen\">)</span></div></div></div></code></pre><p id=\"r-8224267\" data-claire-element-id=\"33764551\">Tout comme pour les modules, vous pouvez importer les éléments spécifiques du module d'un package en utilisant la syntaxe&nbsp;&nbsp;<code data-claire-semantic=\"text\">from mon_package.mon_module import ma_fonction</code>&nbsp;&nbsp; .</p><div class=\"oc-video\"><iframe class=\"oc-video__iframe\" src=\"https://player.vimeo.com/video/836108522?color=7451eb\" allowfullscreen=\"\"></iframe></div><div id=\"r-8242756\" data-claire-element-id=\"33807343\" data-claire-semantic=\"question\"><p id=\"r-8224174\" data-claire-element-id=\"33807342\">Existe-t-il des packages prêts à être téléchargés pour aider les développeurs à résoudre des problèmes courants plus facilement&nbsp;?</p></div><p id=\"r-8224176\" data-claire-element-id=\"33764561\">Bien évidemment ! C'est la magie de Python, qui offre une multitude de packages déjà créés et prêts à être utilisés pour résoudre des problèmes spécifiques. De nombreux packages populaires sont disponibles sur des dépôts en ligne tels que <a href=\"https://pypi.org\"><strong>PyPI</strong></a>, et peuvent être <strong>facilement</strong> installés à l'aide d'un gestionnaire de packages tel que&nbsp;<code data-claire-semantic=\"text\">pip</code>&nbsp; .</p><p id=\"r-8224177\" data-claire-element-id=\"33764407\">Voici quelques exemples de packages populaires, et leurs fonctions&nbsp;:</p><ul id=\"r-8224184\" data-claire-element-id=\"33764564\"><li id=\"r-8224179\" data-claire-element-id=\"33764563\"><p id=\"r-8224178\" data-claire-element-id=\"33764562\"><a href=\"https://fr.python-requests.org/en/latest/\"><strong>Requests</strong></a> : un package HTTP élégant et simple pour Python. Fréquemment utilisé pour les appels d’interface REST&nbsp;;&nbsp;</p></li><li id=\"r-8224181\" data-claire-element-id=\"33764411\"><p id=\"r-8224180\" data-claire-element-id=\"33764410\"><strong><a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\">Beautiful Soup</a></strong> (ressource en anglais) : un package pour récupérer des données de fichiers HTML et XML&nbsp;;&nbsp;</p></li><li id=\"r-8224183\" data-claire-element-id=\"33764413\"><p id=\"r-8224182\" data-claire-element-id=\"33764412\"><strong><a href=\"https://pandas.pydata.org/\">Pandas</a></strong> (ressource en anglais) : un outil open source rapide, puissant et accessible pour l’analyse et la manipulation de données.&nbsp;</p></li></ul><p id=\"r-8224185\" data-claire-element-id=\"33764415\">Des milliers de packages Python sont disponibles pour votre code&nbsp;!</p><h3 id=\"r-8224249\" data-claire-element-id=\"33833406\"><strong>Installez les packages avec pip</strong></h3><p id=\"r-8224187\" data-claire-element-id=\"33764417\">pip est un gestionnaire de packages Python.</p><div id=\"r-8224276\" data-claire-element-id=\"33764571\" data-claire-semantic=\"question\"><p id=\"r-8224188\" data-claire-element-id=\"33764418\">Un gestionnaire de packages ?</p></div><p id=\"r-8224189\" data-claire-element-id=\"33764419\">Un <strong>gestionnaire de packages</strong> est un outil qui permet d’installer et de gérer des packages supplémentaires dans votre terminal. pip est déjà installé dans Python, comme ça vous êtes prêt à vous y mettre&nbsp;!</p><p id=\"r-8224190\" data-claire-element-id=\"33764420\">Pour installer un package avec pip dans votre terminal, utilisez la méthode suivante :</p><p id=\"r-8224191\" data-claire-element-id=\"33764572\"><code data-claire-semantic=\"text\">pip install &lt;nom-du-package&gt;</code></p><p id=\"r-8224192\" data-claire-element-id=\"33764422\">Pour voir les packages déjà installés, vous pouvez écrire le code qui suit&nbsp;:</p><p id=\"r-8224193\" data-claire-element-id=\"33764573\"><code data-claire-semantic=\"text\">pip freeze</code></p><p id=\"r-8224194\" data-claire-element-id=\"33764424\">Il va afficher une liste de tous les packages existants, qu’on appelle dépendances, dans votre terminal.</p><p id=\"r-8224195\" data-claire-element-id=\"33764425\">Regardez la capture vidéo ci-dessous pour savoir comment installer et voir vos packages Python avec pip&nbsp;!</p><div class=\"oc-video\"><iframe class=\"oc-video__iframe\" src=\"https://player.vimeo.com/video/836108537?color=7451eb\" allowfullscreen=\"\"></iframe></div><h3 id=\"r-8242757\" data-claire-element-id=\"33833408\"><strong>À vous de jouer !</strong></h3><p id=\"r-8224281\" data-claire-element-id=\"33833407\">&nbsp;Sans surprise… on se retrouve <a href=\"https://replit.com/team/PythonBasics2-5/Importez-des-packages-Python-Exercice-1\">sur Replit </a>pour tester vos acquis sur ce chapitre !</p><h3 id=\"r-8224251\" data-claire-element-id=\"33764638\"><strong>En résumé</strong></h3><ul id=\"r-8224241\" data-claire-element-id=\"33764637\"><li id=\"r-8224232\" data-claire-element-id=\"33764462\"><p id=\"r-8224231\" data-claire-element-id=\"33764461\">Un <strong>module</strong> est un fichier contenant du code qui peut être <strong>importé</strong> dans d'autres fichiers.</p></li><li id=\"r-8224234\" data-claire-element-id=\"33764464\"><p id=\"r-8224233\" data-claire-element-id=\"33764463\">Un <strong>package</strong> est un dossier qui contient des modules liés entre eux pour fournir des fonctionnalités plus avancées et organisées.</p></li><li id=\"r-8224236\" data-claire-element-id=\"33764632\"><p id=\"r-8224235\" data-claire-element-id=\"33764631\">Le mot-clé&nbsp;<code data-claire-semantic=\"text\">import</code>&nbsp; est utilisé pour <strong>inclure</strong> des modules et des packages externes dans votre code.</p></li><li id=\"r-8224238\" data-claire-element-id=\"33764634\"><p id=\"r-8224237\" data-claire-element-id=\"33764633\">Le mot-clé&nbsp;<code data-claire-semantic=\"text\">from</code>&nbsp; permet d'importer <strong>directement</strong> un élément spécifique depuis un module.</p></li><li id=\"r-8224240\" data-claire-element-id=\"33764636\"><p id=\"r-8224239\" data-claire-element-id=\"33764635\">La commande&nbsp;<code data-claire-semantic=\"text\">pip</code>&nbsp; est un <strong>gestionnaire de packages</strong> Python qui permet de <strong>télécharger</strong>, <strong>installer</strong> et <strong>gérer</strong> des packages.</p></li></ul><p id=\"r-8224242\" data-claire-element-id=\"33764472\"><em>Bien, vous avez appris à importer des modules et des packages. Dans la suite, vous allez apprendre à utiliser ces packages pour extraire des données web. Excitant, n’est-ce pas&nbsp;?</em></p></div>"


# Analyser le HTML avec BeautifulSoup
soup = BeautifulSoup(html, 'html.parser')

# Trouver le titre "En résumé"
# titre = soup.find('strong', string='En résumé')
titre = soup.find('strong', string=lambda text: 'En résumé' in text)
print(titre)
# Trouver tout le texte suivant le titre
element = titre.parent
texte = ''
while element:
    element = element.find_next_sibling()
    if element:
        texte += '\n\n' + element.get_text(strip=True)

print("texte:",texte)